{"results": [{"node": {"raw_sql": "-- Welcome to your first dbt model!\n-- Did you know that you can also configure models directly within\n-- the SQL file? This will override configurations stated in dbt_project.yml\n\n-- Try changing 'view' to 'table', then re-running dbt\n{{ config(materialized='view') }}\n\n\nwith posts as (\n    select\n        id,\n        post_author,\n        post_date,\n        post_date_gmt,\n        post_status,\n        comment_status,\n        ping_status,\n        post_modified,\n        post_parent,\n        guid,\n        menu_order,\n        post_type,\n        comment_count,\n        PREFIX\n    from {{ ref('abc_posts') }}\n    union\n    select\n        id,\n        post_author,\n        post_date,\n        post_date_gmt,\n        post_status,\n        comment_status,\n        ping_status,\n        post_modified,\n        post_parent,\n        guid,\n        menu_order,\n        post_type,\n        comment_count,\n        PREFIX\n    from {{ ref('aks_posts') }}\n    union\n    select\n        id,\n        post_author,\n        post_date,\n        post_date_gmt,\n        post_status,\n        comment_status,\n        ping_status,\n        post_modified,\n        post_parent,\n        guid,\n        menu_order,\n        post_type,\n        comment_count,\n        PREFIX\n    from {{ ref('alz_posts') }}\n    union\n    select\n        id,\n        post_author,\n        post_date,\n        post_date_gmt,\n        post_status,\n        comment_status,\n        ping_status,\n        post_modified,\n        post_parent,\n        guid,\n        menu_order,\n        post_type,\n        comment_count,\n        PREFIX\n    from {{ ref('cf_posts') }}\n    union\n    select\n        id,\n        post_author,\n        post_date,\n        post_date_gmt,\n        post_status,\n        comment_status,\n        ping_status,\n        post_modified,\n        post_parent,\n        guid,\n        menu_order,\n        post_type,\n        comment_count,\n        PREFIX\n    from {{ ref('macd_posts') }}\n\n)\n\nselect * from posts", "database": "datastreet", "schema": "raw_analytics", "fqn": ["data_challenge", "posts"], "unique_id": "model.data_challenge.posts", "package_name": "data_challenge", "root_path": "/app", "path": "posts.sql", "original_file_path": "models/posts.sql", "name": "posts", "resource_type": "model", "alias": "posts", "config": {"enabled": true, "materialized": "view", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "schema": "analytics", "tags": []}, "tags": [], "refs": [["abc_posts"], ["aks_posts"], ["alz_posts"], ["cf_posts"], ["macd_posts"]], "sources": [], "depends_on": {"macros": ["macro.dbt.run_hooks", "macro.dbt.statement"], "nodes": ["seed.data_challenge.abc_posts", "seed.data_challenge.aks_posts", "seed.data_challenge.alz_posts", "seed.data_challenge.cf_posts", "seed.data_challenge.macd_posts"]}, "description": "A table containing all of the site specific post tables", "columns": {"id": {"name": "id", "description": "The post id", "meta": {}, "data_type": "number", "tags": []}, "post_author": {"name": "post_author", "description": "The post author ID", "meta": {}, "data_type": "number", "tags": []}, "post_date": {"name": "post_date", "description": "The date of the post", "meta": {}, "data_type": "date", "tags": []}, "post_date_gmt": {"name": "post_date_gmt", "description": "The date of the post", "meta": {}, "data_type": "date", "tags": []}, "post_satus": {"name": "post_satus", "description": "The post status", "meta": {}, "data_type": "varchar(20)", "tags": []}, "comment_status": {"name": "comment_status", "description": "The comment status", "meta": {}, "data_type": "varchar(20)", "tags": []}, "ping_status": {"name": "ping_status", "description": "The ping status", "meta": {}, "data_type": "varchar(20)", "tags": []}, "post_modified": {"name": "post_modified", "description": "Date post modified", "meta": {}, "data_type": "date", "tags": []}, "post_parent": {"name": "post_parent", "description": "Post parent", "meta": {}, "data_type": "number", "tags": []}, "guid": {"name": "guid", "description": "url", "meta": {}, "data_type": "varchar(255)", "tags": []}, "menu_order": {"name": "menu_order", "description": "Menu order", "meta": {}, "data_type": "number", "tags": []}, "post_type": {"name": "post_type", "description": "Type of post", "meta": {}, "data_type": "varchar(20)", "tags": []}, "comment_count": {"name": "comment_count", "description": "Number of Comments", "meta": {}, "data_type": "number", "tags": []}, "PREFIX": {"name": "PREFIX", "description": "Community prefix", "meta": {}, "data_type": "varchar(4)", "tags": []}}, "meta": {}, "docs": {"show": true}, "patch_path": "models/posts_schema.yml", "build_path": "target/run/data_challenge/models/posts.sql", "compiled": true, "compiled_sql": "-- Welcome to your first dbt model!\n-- Did you know that you can also configure models directly within\n-- the SQL file? This will override configurations stated in dbt_project.yml\n\n-- Try changing 'view' to 'table', then re-running dbt\n\n\n\nwith posts as (\n    select\n        id,\n        post_author,\n        post_date,\n        post_date_gmt,\n        post_status,\n        comment_status,\n        ping_status,\n        post_modified,\n        post_parent,\n        guid,\n        menu_order,\n        post_type,\n        comment_count,\n        PREFIX\n    from \"datastreet\".\"raw\".\"abc_posts\"\n    union\n    select\n        id,\n        post_author,\n        post_date,\n        post_date_gmt,\n        post_status,\n        comment_status,\n        ping_status,\n        post_modified,\n        post_parent,\n        guid,\n        menu_order,\n        post_type,\n        comment_count,\n        PREFIX\n    from \"datastreet\".\"raw\".\"aks_posts\"\n    union\n    select\n        id,\n        post_author,\n        post_date,\n        post_date_gmt,\n        post_status,\n        comment_status,\n        ping_status,\n        post_modified,\n        post_parent,\n        guid,\n        menu_order,\n        post_type,\n        comment_count,\n        PREFIX\n    from \"datastreet\".\"raw\".\"alz_posts\"\n    union\n    select\n        id,\n        post_author,\n        post_date,\n        post_date_gmt,\n        post_status,\n        comment_status,\n        ping_status,\n        post_modified,\n        post_parent,\n        guid,\n        menu_order,\n        post_type,\n        comment_count,\n        PREFIX\n    from \"datastreet\".\"raw\".\"cf_posts\"\n    union\n    select\n        id,\n        post_author,\n        post_date,\n        post_date_gmt,\n        post_status,\n        comment_status,\n        ping_status,\n        post_modified,\n        post_parent,\n        guid,\n        menu_order,\n        post_type,\n        comment_count,\n        PREFIX\n    from \"datastreet\".\"raw\".\"macd_posts\"\n\n)\n\nselect * from posts", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "-- Welcome to your first dbt model!\n-- Did you know that you can also configure models directly within\n-- the SQL file? This will override configurations stated in dbt_project.yml\n\n-- Try changing 'view' to 'table', then re-running dbt\n\n\n\nwith posts as (\n    select\n        id,\n        post_author,\n        post_date,\n        post_date_gmt,\n        post_status,\n        comment_status,\n        ping_status,\n        post_modified,\n        post_parent,\n        guid,\n        menu_order,\n        post_type,\n        comment_count,\n        PREFIX\n    from \"datastreet\".\"raw\".\"abc_posts\"\n    union\n    select\n        id,\n        post_author,\n        post_date,\n        post_date_gmt,\n        post_status,\n        comment_status,\n        ping_status,\n        post_modified,\n        post_parent,\n        guid,\n        menu_order,\n        post_type,\n        comment_count,\n        PREFIX\n    from \"datastreet\".\"raw\".\"aks_posts\"\n    union\n    select\n        id,\n        post_author,\n        post_date,\n        post_date_gmt,\n        post_status,\n        comment_status,\n        ping_status,\n        post_modified,\n        post_parent,\n        guid,\n        menu_order,\n        post_type,\n        comment_count,\n        PREFIX\n    from \"datastreet\".\"raw\".\"alz_posts\"\n    union\n    select\n        id,\n        post_author,\n        post_date,\n        post_date_gmt,\n        post_status,\n        comment_status,\n        ping_status,\n        post_modified,\n        post_parent,\n        guid,\n        menu_order,\n        post_type,\n        comment_count,\n        PREFIX\n    from \"datastreet\".\"raw\".\"cf_posts\"\n    union\n    select\n        id,\n        post_author,\n        post_date,\n        post_date_gmt,\n        post_status,\n        comment_status,\n        ping_status,\n        post_modified,\n        post_parent,\n        guid,\n        menu_order,\n        post_type,\n        comment_count,\n        PREFIX\n    from \"datastreet\".\"raw\".\"macd_posts\"\n\n)\n\nselect * from posts"}, "error": "Database Error in model posts (models/posts.sql)\n  column \"prefix\" does not exist\n  LINE 28:         PREFIX\n                   ^\n  compiled SQL at target/run/data_challenge/models/posts.sql", "status": "ERROR", "execution_time": 0.29830145835876465, "thread_id": "Thread-1", "timing": [], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{{ config(materialized='table') }}\r\r\rwith final_table as (\r\rselect \r    prefix as site_prefix,\r    select ( \r        post_author, \r        comment_count,\r        post_status,\r        case when post_status = 'publish' then count(post_date_gmt) \r\t\t\telse 0 \r\t\tend as total_posts,\r        concat(extract(MONTH from post_date_gmt), '/', extract(YEAR from post_date_gmt)) as month_year,\r        to_timestamp(max(post_date_gmt), 'yyyy-mm-dd hh24:mi:ss.ff')\r        + ((to_timestamp(max(post_date_gmt), 'yyyy-mm-dd hh24:mi:ss.ff') - to_timestamp(min(post_date_gmt), 'yyyy-mm-dd hh24:mi:ss.ff')) / count(post_date_gmt)) as post_average\r    from \r        {{ ref('posts')}})\r    where post_status = 'publish'\r    group by post_author, month_year\rfrom   \r    {{ ref('posts')}}\r)\r\rselect *\rfrom final_table", "database": "datastreet", "schema": "raw_analytics", "fqn": ["data_challenge", "author_table"], "unique_id": "model.data_challenge.author_table", "package_name": "data_challenge", "root_path": "/app", "path": "author_table.sql", "original_file_path": "models/author_table.sql", "name": "author_table", "resource_type": "model", "alias": "author_table", "config": {"enabled": true, "materialized": "table", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "schema": "analytics", "tags": []}, "tags": [], "refs": [["posts"], ["posts"]], "sources": [], "depends_on": {"macros": [], "nodes": ["model.data_challenge.posts", "model.data_challenge.posts"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": null}, "error": null, "status": null, "execution_time": 0, "thread_id": null, "timing": [], "fail": null, "warn": null, "skip": true}], "generated_at": "2020-07-08T11:50:46.524677Z", "elapsed_time": 1.1045951843261719}